{"version":3,"sources":["components/SearchResults.jsx","components/EventCard.jsx","components/SearchBar.jsx","App.js","index.js"],"names":["queryParams","URLSearchParams","window","location","search","updateURL","parameter","argument","document","getElementById","value","get","set","history","replaceState","toString","SearchResults","sortBy","pageNum","leftButton","rightButton","_useState","useState","_useState2","Object","slicedToArray","searchData","setItem","useEffect","fetch","then","res","json","result","data","length","react_default","a","createElement","className","id","class","setTimeout","innerText","_unused","maxPages","Math","ceil","count","parseInt","type","onClick","update","style","paddingLeft","paddingRight","width","map","event","key","fontSize","href","target","rel","title","startDate","endDate","eventId","EventCard","outputData","eventData","undefined","source","height","src","replace","alt","onError","onerror","loadingText","SearchBar","addEventListener","for","curSearch","curSort","SearchListRoot","render","components_SearchResults","App","react_router_dom","react_router","exact","path","component","__webpack_require__","d","__webpack_exports__","root","ReactDOM","createRoot","src_App"],"mappings":"wOAIIA,EAAc,IAAIC,gBAAgBC,OAAOC,SAASC,QAGtD,SAASC,EAAUC,EAAWC,GACvBC,SAASC,eAAe,YAAYC,QAAU,IAAIT,gBAAgBC,OAAOC,SAASC,QAAQO,IAAI,WAC7FX,EAAYY,IAAI,aAAc,GAElCZ,EAAYY,IAAI,SAAUJ,SAASC,eAAe,QAAQC,OAC1DV,EAAYY,IAAIN,EAAWC,GAC3BL,OAAOW,QAAQC,aAAa,KAAM,KAAM,IAAId,EAAYe,YAG5D,IAuEeC,EAvEO,WAClB,IAAIC,EAAST,SAASC,eAAe,QAAQC,MACzCQ,EAA4C,OAAlClB,EAAYW,IAAI,cAAyBX,EAAYW,IAAI,cAAgB,EACvFN,EAAU,SAAUG,SAASC,eAAe,YAAYC,OAHhC,IAcpBS,EAAYC,EAdQC,EAOMC,mBAAS,IAPfC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAOjBK,EAPiBH,EAAA,GAOLI,EAPKJ,EAAA,GAkBxB,GAVAK,oBAAU,WACNC,MAAM,qDAAuDrB,SAASC,eAAe,YAAYC,MAAQ,WAAaO,EAAS,eAAiBC,GAC/IY,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAACG,GAAUN,EAAQM,EAAOC,SAClC,CAAC1B,SAASC,eAAe,YAAYC,MAAOO,EAAQC,IAM7B,IAAtBQ,EAAWS,OACV,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,cAAQF,EAAAC,EAAAC,cAAA,OAAKE,GAAG,oBAAoBC,MAAM,iBAC1CL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MAAIE,GAAG,oBAAP,gBACAJ,EAAAC,EAAAC,cAAA,cACCI,WAAW,WACR,IACIlC,SAASC,eAAe,qBAAqB8B,UAAY,KACzD/B,SAASC,eAAe,oBAAoBkC,UAAY,+BAAiCnC,SAASC,eAAe,YAAYC,MAAO,IACvI,MAAAkC,MACF,MAEHR,EAAAC,EAAAC,cAAA,cACCnB,EAAYC,IAMzB,IAAIyB,EAAWC,KAAKC,KAAKrB,EAAW,GAAGsB,MAAM,IAe7C,OAdIC,SAAS/B,GAAW,IACpBC,EAAaiB,EAAAC,EAAAC,cAAA,UAAQY,KAAK,SAAST,MAAM,cAAcD,GAAG,OAAOW,QAAS,WACtE9C,EAAU,aAAc4C,SAAS/B,GAAS,GAC1CkC,MAFS,WAKbH,SAAS/B,GAAW2B,IACpBzB,EAAcgB,EAAAC,EAAAC,cAAA,UAAQY,KAAK,SAAST,MAAM,cAAcD,GAAG,QAAQW,QAAS,WACxE9C,EAAU,aAAc4C,SAAS/B,GAAS,GAC1CkC,MAFU,WAQdhB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,kBAAUpB,EAAV,IAAoB2B,GACnB1B,EAAYC,EACbgB,EAAAC,EAAAC,cAAA,SAAOe,MAAO,CAACC,YAAa,MAAOC,aAAc,MAAOC,MAAO,OAAQhB,GAAG,eACzEd,EAAW+B,IAAI,SAAAC,GAAK,OACjBtB,EAAAC,EAAAC,cAAA,MAAIG,MAAM,cAAckB,IAAKD,EAAMlB,IAAIJ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGe,MAAO,CAACO,SAAS,IAAKC,KAAM,kBAAkBH,EAAMlB,GAAIsB,OAAO,SAASC,IAAI,uBAAuBL,EAAMM,OAAhH,IAA2H5B,EAAAC,EAAAC,cAAA,WAA3H,gBAAkJoB,EAAMO,UAAxJ,gBAAgLP,EAAMQ,cAIrO9B,EAAAC,EAAAC,cAAA,WAASF,EAAAC,EAAAC,cAAA,WAASF,EAAAC,EAAAC,cAAA,WAASF,EAAAC,EAAAC,cAAA,aC/EnC6B,EAAU,IAAIlE,gBAAgBC,OAAOC,SAASC,QAAQO,IAAI,WAyD/CyD,EAvDG,WAAM,IAYhBC,EAZgBhD,EAISC,mBAAS,IAJlBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAIbiD,EAJa/C,EAAA,GAIFI,EAJEJ,EAAA,GAmCpB,OA9BAK,oBAAU,WACNC,MAAM,sDAAsDsC,GAC3DrC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAACG,GAAUN,EAAQM,EAAOC,SAClC,CAACiC,IAMCE,OAFgBE,IAAjBD,EAAU,GAEIlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,WACxBF,EAAAC,EAAAC,cAAA,cACS9B,SAASwD,MAAMM,EAAU,GAAGN,OAEpCM,EAAUb,IAAI,SAAAC,GAAK,OAGC,OAAjBA,EAAMc,OAAkBpC,EAAAC,EAAAC,cAAA,OAAKmC,OAAO,MAAMC,IAAKhB,EAAMc,OAAOG,QAAQ,MAAO,IAAKC,IAAKT,EAASU,QAAS,SAAAnB,GAAUA,EAAMI,OAAOY,IAAM,kBAAmBhB,EAAMoB,QAAU,QAAwC,OAAxBR,EAAU,GAAGE,OAAkBpC,EAAAC,EAAAC,cAAA,OAAKmC,OAAO,MAAMC,IAAI,cAAcE,IAAKT,IAAkB,OAErR/B,EAAAC,EAAAC,cAAA,UAAKgC,EAAU,GAAGN,OAAW5B,EAAAC,EAAAC,cAAA,yBAAiBgC,EAAU,GAAGL,UAA9B,IAAyC7B,EAAAC,EAAAC,cAAA,WAAzC,cAA8DgC,EAAU,GAAGJ,UAI3G9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZH,EAAAC,EAAAC,cAAA,OAAKE,GAAG,eAAeC,MAAM,gBAAoBL,EAAAC,EAAAC,cAAA,WACjDF,EAAAC,EAAAC,cAAA,MAAIE,GAAG,eAAP,eAMhBJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,WAASF,EAAAC,EAAAC,cAAA,WACTF,EAAAC,EAAAC,cAAA,cACK+B,GAELjC,EAAAC,EAAAC,cAAA,gBA7BQyC,EA+BR3C,EAAAC,EAAAC,cAAA,cACKI,WAAW,WACR,IACIlC,SAASC,eAAe,gBAAgB8B,UAAY,UACpD/B,SAASC,eAAe,eAAekC,UAAY,GACtD,MAAAC,MACF,wBC5BFoC,EAvBC,WAMd,OALFtC,WAAW,WAAOlC,SAASC,eAAe,YAAYC,MAAQ,IAAIT,gBAAgBC,OAAOC,SAASC,QAAQO,IAAI,UAC5FH,SAASC,eAAe,QAAQC,MAAsE,KAA9D,IAAIT,gBAAgBC,OAAOC,SAASC,QAAQO,IAAI,UAAmB,MAAQ,IAAIV,gBAAgBC,OAAOC,SAASC,QAAQO,IAAI,UACnKH,SAASC,eAAe,QAAQwE,iBAAiB,SAAU7B,GAC3D5C,SAASyE,iBAAiB,UAAW7B,GACrCA,KAAW,GAEvBhB,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OAAKsC,IAAI,OAAOpB,MAAM,QAAQkB,IAAI,eAClCtC,EAAAC,EAAAC,cAAA,6CACAF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAO4C,IAAI,YAAX,YACJ9C,EAAAC,EAAAC,cAAA,SAAOY,KAAK,OAAOV,GAAG,aACtBJ,EAAAC,EAAAC,cAAA,SAAO4C,IAAI,QAAX,yBACA9C,EAAAC,EAAAC,cAAA,UAAQE,GAAG,QACTJ,EAAAC,EAAAC,cAAA,UAAQ5B,MAAM,OAAd,OACA0B,EAAAC,EAAAC,cAAA,UAAQ5B,MAAM,OAAd,OACA0B,EAAAC,EAAAC,cAAA,UAAQ5B,MAAM,iBAAd,kBACA0B,EAAAC,EAAAC,cAAA,UAAQ5B,MAAM,kBAAd,uBCZRyE,EAAY,GACZC,EAAU,MACVlE,EAA4E,OAAlE,IAAIjB,gBAAgBC,OAAOC,SAASC,QAAQO,IAAI,cAAyB,IAAIV,gBAAgBC,OAAOC,SAASC,QAAQO,IAAI,cAAgB,EAIhJ,SAASyC,IACdV,WAAW,YACLlC,SAASC,eAAe,YAAYC,QAAUyE,GAAaC,IAAY5E,SAASC,eAAe,QAAQC,OAC1G,IAAIT,gBAAgBC,OAAOC,SAASC,QAAQO,IAAI,gBAAkBO,GAA6E,OAAlE,IAAIjB,gBAAgBC,OAAOC,SAASC,QAAQO,IAAI,iBAC5HO,EAA4E,OAAlE,IAAIjB,gBAAgBC,OAAOC,SAASC,QAAQO,IAAI,cAAyB,IAAIV,gBAAgBC,OAAOC,SAASC,QAAQO,IAAI,cAAgB,EACnJwE,EAAY3E,SAASC,eAAe,YAAYC,MAChD0E,EAAU5E,SAASC,eAAe,QAAQC,MAC1C2E,EAAeC,OACblD,EAAAC,EAAAC,cAACiD,EAAD,SAGH,KAgBUC,MAbf,WACE,OACEpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACmD,EAAA,EAAD,KACErD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,KACAtD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAO,IAAIC,UAAWb,IACnC5C,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAO,SAASC,UAAWzB,QClChD0B,EAAAC,EAAAC,EAAA,mCAAAX,IAKA,IAAMY,EAAOC,IAASC,WAAW3F,SAASC,eAAe,SACnD4E,EAAiBa,IAASC,WAAW3F,SAASC,eAAe,eACnEwF,EAAKX,OACDlD,EAAAC,EAAAC,cAAC8D,EAAD","file":"static/js/main.56d56cf9.chunk.js","sourcesContent":["import React,{useState, useEffect} from 'react'\r\nimport { update } from '../App';\r\nimport '../App.css';\r\n\r\nlet queryParams = new URLSearchParams(window.location.search);\r\n\r\n//Changes the parameters in the client's URL when search query is updated\r\nfunction updateURL(parameter, argument){\r\n    if(document.getElementById('inputbar').value !== new URLSearchParams(window.location.search).get('search')){\r\n        queryParams.set('pageNumber', 1);\r\n    }\r\n    queryParams.set('sortBy', document.getElementById('sort').value);\r\n    queryParams.set(parameter, argument);\r\n    window.history.replaceState(null, null, \"?\"+queryParams.toString());\r\n}\r\n\r\nconst SearchResults = () => {\r\n    let sortBy = document.getElementById('sort').value;\r\n    let pageNum = queryParams.get('pageNumber') !== null ? queryParams.get('pageNumber') : 1;\r\n    updateURL(\"search\", document.getElementById('inputbar').value);\r\n\r\n    //Requests searchData from the SQL Database given the search parameters. This request returns a list of up to 10 event data\r\n    //searchData = [{id: str, title: str, startDate: str, endDate: str, count: int}]\r\n    const [searchData, setItem] = useState([]);\r\n    useEffect(()=>{\r\n        fetch(\"https://brandonhalig.com/php/eventdata.php?search=\" + document.getElementById('inputbar').value + \"&sortBy=\" + sortBy + \"&pageNumber=\" + pageNum)\r\n        .then(res => res.json())\r\n        .then((result)=>{setItem(result.data)})\r\n    },[document.getElementById('inputbar').value, sortBy, pageNum]);\r\n    \r\n    let leftButton, rightButton;\r\n\r\n    //Display loading until fetch request searchData is returned with data\r\n    //If fetch request recieves no data after 2 seconds, it displays that no results were found\r\n    if(searchData.length === 0){\r\n        return(\r\n            <div className=\"App\">\r\n                <br></br>\r\n                <center><div id=\"SmallLoadingImage\" class=\"smallLoader\"></div></center>\r\n                <br></br>\r\n                <h2 id=\"searchingMessage\">Searching...</h2>\r\n                <script>\r\n                {setTimeout(() => {\r\n                    try{\r\n                        document.getElementById(\"SmallLoadingImage\").className = null;\r\n                        document.getElementById(\"searchingMessage\").innerText = 'Unable to find results for \"' + document.getElementById('inputbar').value +'\"';\r\n                    }catch{}\r\n                }, 2000)}\r\n                </script>\r\n                <center>\r\n                {leftButton}{rightButton}</center>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //Display back and forward buttons only if the next page exists\r\n    let maxPages = Math.ceil(searchData[0].count/10);\r\n    if (parseInt(pageNum) > 1){\r\n        leftButton = <button type=\"button\" class=\"pageButtons\" id=\"left\" onClick={() => {\r\n            updateURL(\"pageNumber\", parseInt(pageNum)-1);\r\n            update();\r\n        }}>←</button>\r\n    }\r\n    if (parseInt(pageNum) < maxPages){\r\n        rightButton = <button type=\"button\" class=\"pageButtons\" id=\"right\" onClick={() => {\r\n            updateURL(\"pageNumber\", parseInt(pageNum)+1);\r\n            update();\r\n        }}>→</button>\r\n    }\r\n\r\n    //Displays a table of up to 10 search results with back and forward buttons\r\n    return (\r\n        <div>\r\n            <center>\r\n                <h2>Page {pageNum}/{maxPages}</h2>\r\n                {leftButton}{rightButton}\r\n                <table style={{paddingLeft: \"10%\", paddingRight: \"10%\", width: \"65%\"}} id=\"eventsTable\">\r\n                {searchData.map(event => (\r\n                    <tr class=\"eventsTable\" key={event.id}><h5><a style={{fontSize:25}} href={\"/event?eventId=\"+event.id} target=\"_blank\" rel=\"noopener noreferrer\">{event.title}</a> <br></br> Start Date: {event.startDate} | End Date: {event.endDate}</h5></tr>\r\n                ))}\r\n                </table>\r\n            </center>\r\n            <br></br><br></br><br></br><br></br>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchResults","import React,{useState, useEffect} from 'react'\r\nimport '../App.css';\r\n\r\nlet eventId = new URLSearchParams(window.location.search).get('eventId');\r\n\r\nconst EventCard = () => {\r\n\r\n    //Gets the events picture URL, start date, end date, and title from the sql database\r\n    //eventData = [{title: str, startDate: str, endDate: str, source: str}]\r\n    const [eventData, setItem] = useState([]);\r\n    useEffect(()=>{\r\n        fetch(\"https://brandonhalig.com/php/eventdata.php?eventId=\"+eventId)\r\n        .then(res => res.json())\r\n        .then((result)=>{setItem(result.data)})\r\n    },[eventId]);\r\n\r\n    \r\n    let outputData, loadingText;\r\n    if(eventData[0] !== undefined){\r\n        //outputData contains the html with the events images, title, and dates\r\n        outputData = <div className='eventCard'><br></br>\r\n                        <script>\r\n                                {document.title=eventData[0].title}\r\n                        </script>\r\n                        {eventData.map(event => (\r\n                            //Displays events images, If event doesn't have an image link, it displays imgnotfound.jpg\r\n                            //If event image URL link returns 404, image is displayed as noimage.png\r\n                            event.source !== null ? <img height=\"250\" src={event.source.replace(/\\\\/g, '')} alt={eventId} onError={event => {event.target.src = \"imgnotfound.jpg\"; event.onerror = null}}></img> : eventData[0].source === null ? <img height=\"250\" src=\"noimage.png\" alt={eventId}></img> : null\r\n                        ))}\r\n                        <h1>{eventData[0].title}</h1><h3>Start Date: {eventData[0].startDate} <br></br> End Date: {eventData[0].endDate}</h3>\r\n                     </div>\r\n    }else{\r\n        //outputData is a loading bar while waiting for fetch data\r\n        outputData = <div className='eventCard'>\r\n                        <div id=\"LoadingImage\" class=\"largeLoader\"></div><br></br>\r\n                        <h2 id=\"LoadingText\">Loading...</h2>\r\n                     </div>\r\n    }\r\n\r\n    //Displays event card with event's image, title and dates \r\n    return (\r\n        <div className=\"App\">\r\n            <br></br><br></br>\r\n            <center>\r\n                {outputData}\r\n            </center>\r\n            <br></br>\r\n            {loadingText}\r\n            <script>\r\n                {setTimeout(() => {\r\n                    try{\r\n                        document.getElementById(\"LoadingImage\").className = \"noImage\";\r\n                        document.getElementById(\"LoadingText\").innerText = \"\";\r\n                    }catch{}\r\n                }, 2500)}\r\n            </script>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EventCard;","import React, {} from 'react';\r\nimport { update } from '../App';\r\n\r\nconst SearchBar = () => {\r\n  setTimeout(() => {document.getElementById('inputbar').value = new URLSearchParams(window.location.search).get('search');\r\n                    document.getElementById('sort').value = new URLSearchParams(window.location.search).get('sortBy') === '' ? 'A-Z' : new URLSearchParams(window.location.search).get('sortBy');\r\n                    document.getElementById(\"sort\").addEventListener(\"change\", update);\r\n                    document.addEventListener(\"keydown\", update);\r\n                    update()}, 0);\r\n    return (\r\n        <center>\r\n          <img alt=\"logo\" width=\"500px\" src='./logo.png' />\r\n          <h3>Type below to search for events</h3>\r\n          <h2><label for=\"inputbar\">Search: </label>\r\n          <input type=\"text\" id=\"inputbar\"></input>\r\n          <label for=\"sort\">&nbsp; &nbsp; &nbsp; Sort: </label>\r\n          <select id=\"sort\">\r\n            <option value=\"A-Z\">A-Z</option>\r\n            <option value=\"Z-A\">Z-A</option>\r\n            <option value=\"DateAscending\">Date Ascending</option>\r\n            <option value=\"DateDescending\">Date Descending</option>\r\n          </select></h2>\r\n        </center>\r\n    );\r\n  }\r\n  \r\n  export default SearchBar;","import React from 'react';\nimport './App.css';\nimport SearchResults from \"./components/SearchResults.jsx\"\nimport { SearchListRoot } from '.';\nimport EventCard from './components/EventCard.jsx';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport SearchBar from './components/SearchBar.jsx';\n\nlet curSearch = '';\nlet curSort = 'A-Z';\nlet pageNum = new URLSearchParams(window.location.search).get('pageNumber') !== null ? new URLSearchParams(window.location.search).get('pageNumber') : 1;\n\n//update() get's called on page load by SearchBar, when the search bar input is updated, when the sort list updated, or when the page is updated.\n//update() renders the list of event data based on the search query \nexport function update(){\n  setTimeout(function(){\n    if (document.getElementById('inputbar').value !== curSearch || curSort !== document.getElementById(\"sort\").value || \n    (new URLSearchParams(window.location.search).get('pageNumber') !== pageNum && new URLSearchParams(window.location.search).get('pageNumber') !== null)){\n      pageNum = new URLSearchParams(window.location.search).get('pageNumber') !== null ? new URLSearchParams(window.location.search).get('pageNumber') : 1;\n      curSearch = document.getElementById('inputbar').value;\n      curSort = document.getElementById(\"sort\").value;\n      SearchListRoot.render(\n        <SearchResults />\n      );\n    }\n  }, 100);\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n        <Route exact path = \"/\" component={SearchBar} />\n        <Route exact path = \"/event\" component={EventCard} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React, {} from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nconst SearchListRoot = ReactDOM.createRoot(document.getElementById('SearchList'));\nroot.render(\n    <App />\n)\n\nexport {SearchListRoot};"],"sourceRoot":""}